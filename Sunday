int Sunday(string s, string p) {
	int n = s.size(), m = p.size();
	vector<int> last_pos(256, -1);
	int idx = 0;
	for (char c : p) {
		last_pos[c] = idx++;
	}
	// for (char c : p) {
	// 	cout << last_pos[c] <<" ";
	// }
	// cout << endl;
	for (int i = 0; i <= n - m ; ) {
		int j = 0;
		while (j < m) {
			if (s[i] == p[j]) {
				++i;
				++j;
				// cout << j << endl;
			} else {	
				char c = s[i + m - j];
				// cout << i +m -j <<" "<<c << endl;
				if (last_pos[c] == -1) {
					i = i + m - j +1 ;
				} else {
					i = i + m - j - last_pos[c];
				}
				// cout << "i : " << i << endl;
				// cout << "idx : " << i +m -j <<endl;
				break;
				
			}
		}
		if (j == m) 
			return i-j;
	}
	return -1;

}
vector<int> my_Sunday(string s, string p) {
	vector<int> res;
	int n = s.size(), m = p.size();
	vector<int> last_pos(256, -1);
	for (int i = 0; i < p.size(); ++i) {
		last_pos[p[i]] = i;
	}
	int i = 0;
	while (i + m-1  < n) {
		int j = 0;
		while (j < m) {
			if (s[i] == p[j]) {
				++i; ++j;
			} else {
				int idx = i - j + m;
				char c = s[idx];
				if (last_pos[c] == -1) {
					i = idx + 1;
				} else {
					i = idx - last_pos[c];
				}
				break;
			}
		}
		if (j == m)
			res.push_back(i - j);
	}
	return res;
}
